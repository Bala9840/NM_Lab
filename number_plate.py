# -*- coding: utf-8 -*-
"""Number_Plate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mmSP2qWoyCH-2f0MpExk6oqKz_1eZKzc
"""

pip install opencv-python easyocr numpy

#pip install opencv-python easyocr numpy

from google.colab import files
from IPython.display import display
from PIL import Image
import cv2
import easyocr
import numpy as np
from google.colab.patches import cv2_imshow

# Upload image
uploaded = files.upload()

# Get uploaded file name
for filename in uploaded.keys():
    image_path = filename

# Step 2: Load and process image
image = cv2.imread(image_path)

if image is None:
    print("‚ùå Image not found or not uploaded properly.")
else:
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Load Haar cascade for number plate detection
    plate_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_russian_plate_number.xml')
    plates = plate_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=4, minSize=(30, 30))

    if len(plates) == 0:
        print("‚ùå No plate detected using Haar Cascade. Falling back to full image OCR...")
        reader = easyocr.Reader(['en'])
        result = reader.readtext(gray)
        for (_, text, prob) in result:
            print(f"üîç Full Image OCR: {text} (Confidence: {prob:.2f})")
    else:
        for (x, y, w, h) in plates:
            # Draw rectangle on original image (optional)
            cv2.rectangle(image, (x, y), (x + w, y + h), (0, 255, 0), 2)

            # Crop and display the number plate
            plate_crop = image[y:y + h, x:x + w]
            print("üñºÔ∏è Cropped Number Plate Image:")
            cv2_imshow(plate_crop)

            # OCR
            reader = easyocr.Reader(['en'])
            result = reader.readtext(plate_crop)

            if result:
                for (_, text, prob) in result:
                    print(f"‚úÖ Detected Number Plate Text: {text} (Confidence: {prob:.2f})")
            else:
                print("‚ùå OCR failed on cropped plate. Trying full image OCR...")
                result = reader.readtext(gray)
                for (_, text, prob) in result:
                    print(f"üîç Full Image OCR: {text} (Confidence: {prob:.2f})")


    print("üì∑ Original Image with Plate Detection:")
    cv2_imshow(image)