# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HMhrzjp1hMz_CMyEK9ElDny_B75XvRmP
"""

pip install opencv-python



import cv2
print(cv2.__version__)

import cv2
from google.colab.patches import cv2_imshow

#load the image
image = cv2.imread('/content/sample_data/one.jpg')

# Display the image
cv2_imshow( image)
cv2.waitKey(0) # Wait for key press
cv2.destroyAllWindows() # close all windows

#save the image
cv2.imwrite('output.jpg', image)

import cv2
from google.colab.patches import cv2_imshow
image=cv2.imread('/content/sample_data/one.jpg')
cv2_imshow(image)
hight, widht, channel=image.shape
print('hight=', hight)
print('widht=', widht)
print('channel=', channel)





image_size = image.size
print(f"Total Pixels : {image_size}")
print("HxW :" , (hight*widht)*channel)

resized_image = cv2.resize(image, (500, 600))
cv2_imshow(resized_image)

gray_image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
cv2_imshow(gray_image)
channel=image.shape
print(channel)

image = cv2.imread('/content/sample_data/mice.jpg')
hsv_image = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
cv2_imshow(hsv_image)

cropped=image[280:300, 00:600]
cv2_imshow(cropped)



import cv2
image = cv2.imread('/content/sample_data/one.jpg')
cv2.rectangle(image, (50, 50), (200, 200), (0, 255, 0), 3)
cv2_imshow(image)



import cv2
from google.colab.patches import cv2_imshow
img=cv2.imread('/content/sample_data/dog.jpg')

x=cv2.Sobel(img, cv2.CV_64F, 1, 0, ksize=5)
cv2_imshow(x)

y=cv2.Sobel(img, cv2.CV_64F, 0, 1, ksize=5)
cv2_imshow(y)

import cv2
from google.colab.patches import cv2_imshow
img=cv2.imread('/content/sample_data/taj.jpg')

low_threshold=210; high_threshold=250;
canny_edges=cv2.Canny(img, low_threshold, high_threshold)
cv2_imshow(canny_edges)

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
img=cv2.imread('/content/sample_data/car.jpg')

kernel_size=5
blur_img=cv2.GaussianBlur(img, (kernel_size, kernel_size), 0)
cv2_imshow(blur_img)

import cv2
import numpy as np
from google.colab.patches import cv2_imshow
img=cv2.imread('/content/sample_data/car.jpg')


l1=[100,200,300,400]
l2=[2,4,5,6]
c=np.array(l1)
c2=np.array(l2)
v=c/c2
v

import cv2
import numpy as np
import matplotlib.pyplot as plt

from google.colab.patches import cv2_imshow
img=cv2.imread('/content/sample_data/car.jpg')

imag=cv2.cvtColor(img, cv2.COLOR_BGR2RGB)
plt.imshow(imag)
plt.title("Orginal Image")
plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow  # If using Google Colab

# Load image
img = cv2.imread('/content/sample_data/car.jpg')

# Resize the image
scale_x, scale_y = 5, 5
resized = cv2.resize(img, None, fx=scale_x, fy=scale_y, interpolation=cv2.INTER_CUBIC)


# Plotting the original and resized images using matplotlib
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color rendering
plt.title("Original Image")

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(resized, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color rendering
plt.title("Resized Image")

plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow  # If using Google Colab

# Load the image
img = cv2.imread('/content/sample_data/car.jpg')

# Resize the image
scale_x, scale_y = 5, 5
resized = cv2.resize(img, None, fx=scale_x, fy=scale_y, interpolation=cv2.INTER_CUBIC)

# Apply the stylization effect (painting effect)
painted_image = cv2.stylization(resized, sigma_s=60, sigma_r=0.07)

# Display images using cv2_imshow for Colab
cv2_imshow(painted_image)

# Plotting the original and painted images using matplotlib
plt.subplot(1, 2, 1)
plt.imshow(cv2.cvtColor(resized, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color rendering
plt.title("Resized Image")

plt.subplot(1, 2, 2)
plt.imshow(cv2.cvtColor(painted_image, cv2.COLOR_BGR2RGB))  # Convert BGR to RGB for correct color rendering
plt.title("Painted Image")

plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow  # If using Google Colab
img = cv2.imread('/content/sample_data/mice.jpg')


(h,w) = img.shape[:2]
center=(w/2, h/2)

angle=-5
scale=1.0
rotation_matrix = cv2.getRotationMatrix2D(center, angle, scale)

rotated=cv2.warpAffine(img, rotation_matrix, (w,h))

plt.imshow(cv2.cvtColor(rotated, cv2.COLOR_BGR2RGB))
plt.title("Rotated Image")
plt.show()

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow  # If using Google Colab
img = cv2.imread('/content/sample_data/mice.jpg')

tx,ty = -80,-80
translation_matrix = np.float32([[1, 0, tx], [0, 1, ty]])
translated = cv2.warpAffine(img, translation_matrix, (w, h))

plt.imshow(cv2.cvtColor(translated, cv2.COLOR_BGR2RGB))
plt.title("Translated Image")
plt.show()

flipped_horizontal = cv2.flip(img, 1)
flipped_vertical = cv2.flip(img, 0)
flipped_both = cv2.flip(img, -1)


plt.subplot(3,2, 1)
img1 = plt.imshow(cv2.cvtColor(img, cv2.COLOR_BGR2RGB))
print(img1)
plt.title("Orginal Image")

plt.subplot(3, 2, 2)
plt.imshow(cv2.cvtColor(flipped_horizontal, cv2.COLOR_BGR2RGB))
plt.title("Horizontal Image")

plt.subplot(3, 2, 5)
plt.imshow(cv2.cvtColor(flipped_vertical, cv2.COLOR_BGR2RGB))
plt.title("Vertical Flipped")

plt.subplot(3,2, 6)
plt.imshow(cv2.cvtColor(flipped_both, cv2.COLOR_BGR2RGB))
plt.title("Both Flipped")

import cv2
import numpy as np
import matplotlib.pyplot as plt
image=cv2.imread('/content/sample_data/mice.jpg')
pts1=np.float32([[50,50],[200,50],[50,200],[200,200]])
pts2=np.float32([[10,100],[200,50],[100,250],[250,300]])
M=cv2.getPerspectiveTransform(pts1,pts2)
warped_image=cv2.warpPerspective(image,M,(1000,1000))
plt.imshow(cv2.cvtColor(warped_image,cv2.COLOR_BGR2RGB))
plt.title('Perspective transform Image')
plt.show()

